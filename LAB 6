## Experiment 1: Generate the FSBL

1.	SDK is used to generate First Stage Bootloader Application using a Template.
2.	In SDK, File -> New -> Application Project.
3.	Name it zynq_fsbl_0 and make a new BSP. Then click on next.
4.	Select Zynq FSBL and click on Finish.
5.	Use console output to determine the debug configuration build size. Use linker script to determine target memory.
6.	Setup the stdin and stdout in BSP like that of lab 3.
7.	Right click on the Debug folder underneath the zynq_fsbl_0 application and select properties.
8.	Properties -> Settings -> Optimization and debugging.
9.	For optimization the debug level will be at none and for debugging the level will be maximum.
10.	Click on manage configurations, then select release -> set active -> OK.
11.	Then on the optimization window click Apply -> OK.
12.	If it doesn’t build click on project -> Build All.
13.	A release folder will be created in zynq_fsbl_0.

## Experiment 2: Investigate the FSBL

1.	Expand zynq_fsbl_0  src. Notice the various .c and .h files that SDK pulled together for the FSBL. 
2.	Double click on the main.c and scroll down the. Code to get an overview.
